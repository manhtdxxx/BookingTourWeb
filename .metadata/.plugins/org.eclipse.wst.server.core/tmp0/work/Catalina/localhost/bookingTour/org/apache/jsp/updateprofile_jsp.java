/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.96
 * Generated at: 2024-11-11 16:31:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class updateprofile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Thông tin cá nhân</title>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("	background-color: #f8f9fa;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-container {\r\n");
      out.write("	max-width: 600px;\r\n");
      out.write("	margin-top: 20px;\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("	background-color: #ffffff;\r\n");
      out.write("	border-radius: 8px;\r\n");
      out.write("	box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-title {\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	color: #007bff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-label {\r\n");
      out.write("	font-weight: 500;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn-submit {\r\n");
      out.write("	background-color: #007bff;\r\n");
      out.write("	border: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn-submit:hover {\r\n");
      out.write("	background-color: #0056b3;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"container d-flex justify-content-center\">\r\n");
      out.write("		<div class=\"col-lg-6 col-md-8 col-sm-10 form-container\">\r\n");
      out.write("			<h1 class=\"text-center form-title mb-4\">Thông tin cá nhân</h1>\r\n");
      out.write("			<form>\r\n");
      out.write("				<div class=\"mb-3\">\r\n");
      out.write("					<label for=\"username\" class=\"form-label\"><i class=\"bi bi-person-circle me-1\"></i>Tên\r\n");
      out.write("						đăng nhập</label> <input type=\"text\" class=\"form-control\" id=\"username\" name=\"username\"\r\n");
      out.write("						placeholder=\"Nhập tên đăng nhập\" required>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"mb-3\">\r\n");
      out.write("					<label for=\"customerName\" class=\"form-label\"><i class=\"bi bi-person me-1\"></i>Tên khách\r\n");
      out.write("						hàng</label> <input type=\"text\" class=\"form-control\" id=\"customerName\" name=\"customerName\"\r\n");
      out.write("						placeholder=\"Nhập tên khách hàng\" required>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"mb-3\">\r\n");
      out.write("					<label class=\"form-label\"><i class=\"bi bi-gender-ambiguous me-1\"></i>Giới tính</label><br>\r\n");
      out.write("					<div class=\"form-check form-check-inline\">\r\n");
      out.write("						<input class=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"male\" value=\"male\" required>\r\n");
      out.write("						<label class=\"form-check-label\" for=\"male\">Nam</label>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"form-check form-check-inline\">\r\n");
      out.write("						<input class=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"female\" value=\"female\" required>\r\n");
      out.write("						<label class=\"form-check-label\" for=\"female\">Nữ</label>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"mb-3\">\r\n");
      out.write("					<label for=\"dob\" class=\"form-label\"><i class=\"bi bi-calendar-date me-1\"></i>Ngày sinh</label> <input\r\n");
      out.write("						type=\"date\" class=\"form-control\" id=\"dob\" name=\"dob\" placeholder=\"Chọn ngày sinh\" required>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"mb-3\">\r\n");
      out.write("					<label for=\"phone\" class=\"form-label\"><i class=\"bi bi-telephone me-1\"></i>Số điện thoại</label>\r\n");
      out.write("					<input type=\"tel\" class=\"form-control\" id=\"phone\" name=\"phone\" placeholder=\"Nhập số điện thoại\"\r\n");
      out.write("						required>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"mb-3\">\r\n");
      out.write("					<label for=\"email\" class=\"form-label\"><i class=\"bi bi-envelope me-1\"></i>Email</label> <input\r\n");
      out.write("						type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Nhập email\" required>\r\n");
      out.write("				</div>\r\n");
      out.write("				<button type=\"submit\" class=\"btn btn-submit w-100\">Cập nhật thông tin</button>\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
