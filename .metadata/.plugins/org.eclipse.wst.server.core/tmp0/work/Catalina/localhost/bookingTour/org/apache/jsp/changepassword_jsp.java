/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.96
 * Generated at: 2024-11-15 12:57:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import model.KhachHang;

public final class changePassword_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model.KhachHang");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"vi\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<title>Đổi mật khẩu</title>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("/* Custom styles for the page */\r\n");
      out.write("body {\r\n");
      out.write("	background-color: #f8f9fa;\r\n");
      out.write("	font-family: 'Arial', sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-container {\r\n");
      out.write("	background-color: white;\r\n");
      out.write("	border-radius: 8px;\r\n");
      out.write("	box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("	padding: 3rem;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	max-width: 500px;\r\n");
      out.write("	margin-top: 50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-container h1 {\r\n");
      out.write("	font-size: 2.5rem;\r\n");
      out.write("	margin-bottom: 1.5rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-container .form-label {\r\n");
      out.write("	font-size: 1rem;\r\n");
      out.write("	font-weight: 500;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-container input {\r\n");
      out.write("	border-radius: 4px;\r\n");
      out.write("	font-size: 1rem;\r\n");
      out.write("	padding: 0.75rem;\r\n");
      out.write("	border: 1px solid #ddd;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-container input:focus {\r\n");
      out.write("	border-color: #007bff;\r\n");
      out.write("	box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-container button {\r\n");
      out.write("	padding: 0.75rem;\r\n");
      out.write("	font-size: 1.1rem;\r\n");
      out.write("	border-radius: 4px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-container .alert {\r\n");
      out.write("	margin-bottom: 1rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#msg {\r\n");
      out.write("	font-size: 0.9rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".footer {\r\n");
      out.write("	padding: 2rem 0;\r\n");
      out.write("	background-color: #343a40;\r\n");
      out.write("	color: white;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".footer a {\r\n");
      out.write("	color: #ffc107;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".footer a:hover {\r\n");
      out.write("	text-decoration: underline;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	");

	Object obj = session.getAttribute("khachHang");
	KhachHang khachHang = null;

	if (obj != null) {
		khachHang = (KhachHang) obj;
	}

	if (khachHang == null) {
	
      out.write("\r\n");
      out.write("	<div class=\"container-fluid bg-light text-center py-5\" role=\"alert\">\r\n");
      out.write("		<h1 class=\"fw-bold text-danger\">Bạn cần đăng nhập để truy cập trang này!</h1>\r\n");
      out.write("		<h5 class=\"mt-4\">\r\n");
      out.write("			Vui lòng quay lại <a href=\"index.jsp\" class=\"fw-bold text-primary\">trang chủ</a>.\r\n");
      out.write("		</h5>\r\n");
      out.write("		<h5 class=\"mt-2\">\r\n");
      out.write("			Hoặc truy cập <a href=\"login.jsp\" class=\"fw-bold text-primary\">trang đăng nhập</a> để tiếp tục.\r\n");
      out.write("		</h5>\r\n");
      out.write("	</div>\r\n");
      out.write("	");

	} else {
	
      out.write("\r\n");
      out.write("	<!-- NAVBAR -->\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "layout/nav.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<!-- CHANGE PASSWORD FORM -->\r\n");
      out.write("	<section class=\"d-flex justify-content-center\">\r\n");
      out.write("		<div class=\"form-container\">\r\n");
      out.write("			<h1 class=\"text-center mb-4\">Đổi Mật Khẩu</h1>\r\n");
      out.write("\r\n");
      out.write("			<!-- Error/Success Message -->\r\n");
      out.write("			");

			String error = (String) request.getAttribute("error");
			String success = (String) request.getAttribute("success");
			error = (error != null) ? error : "";
			success = (success != null) ? success : "";

			if (!error.isEmpty()) {
			
      out.write("\r\n");
      out.write("			<div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n");
      out.write("				<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\r\n");
      out.write("				<strong>Lỗi: </strong>");
      out.print(error);
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("			");

			}
			if (!success.isEmpty()) {
			
      out.write("\r\n");
      out.write("			<div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n");
      out.write("				<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\r\n");
      out.write("				<strong>Thành công: </strong>");
      out.print(success);
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("			");

			request.removeAttribute("success");
			}
			
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<form action=\"change-password\" method=\"post\">\r\n");
      out.write("				<div class=\"mb-3\">\r\n");
      out.write("					<label for=\"currentPassword\" class=\"form-label\">Mật khẩu hiện tại</label> <input\r\n");
      out.write("						type=\"password\" class=\"form-control\" id=\"currentPassword\" name=\"currentPassword\"\r\n");
      out.write("						placeholder=\"Nhập mật khẩu hiện tại\" required>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"mb-3\">\r\n");
      out.write("					<label for=\"newPassword\" class=\"form-label\">Mật khẩu mới</label> <input type=\"password\"\r\n");
      out.write("						class=\"form-control\" id=\"newPassword\" name=\"newPassword\" placeholder=\"Nhập mật khẩu mới\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"mb-3\">\r\n");
      out.write("					<label for=\"confirmPassword\" class=\"form-label\">Xác nhận mật khẩu mới</label> <input\r\n");
      out.write("						type=\"password\" class=\"form-control\" id=\"confirmPassword\" name=\"confirmPassword\"\r\n");
      out.write("						placeholder=\"Xác nhận mật khẩu mới\" required>\r\n");
      out.write("					<div id=\"msg\" class=\"text-danger fw-medium mb-3 mt-1\"></div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<button type=\"submit\" class=\"btn btn-primary w-100 mt-1\">Đổi Mật Khẩu</button>\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("	</section>\r\n");
      out.write("\r\n");
      out.write("	<!-- FOOTER -->\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "layout/footer.jsp", out, false);
      out.write('\r');
      out.write('\n');
      out.write('	');

	}
	
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	document.addEventListener(\"DOMContentLoaded\", confirmPassword); // Run on page load\r\n");
      out.write("\r\n");
      out.write("	function confirmPassword() {\r\n");
      out.write("		let pass_1 = document.getElementById(\"newPassword\").value;\r\n");
      out.write("		let pass_2 = document.getElementById(\"confirmPassword\").value;\r\n");
      out.write("		let msg = document.getElementById(\"msg\");\r\n");
      out.write("		let submitBtn = document.querySelector(\"button[type='submit']\");\r\n");
      out.write("\r\n");
      out.write("		if (pass_1 !== pass_2) {\r\n");
      out.write("			msg.innerHTML = \"Mật khẩu không khớp!\";\r\n");
      out.write("			submitBtn.disabled = true;\r\n");
      out.write("		} else {\r\n");
      out.write("			msg.innerHTML = \"\";\r\n");
      out.write("			submitBtn.disabled = false;\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	// Event listeners for keyup on both fields\r\n");
      out.write("	document.getElementById(\"newPassword\").addEventListener(\"keyup\",\r\n");
      out.write("			confirmPassword);\r\n");
      out.write("	document.getElementById(\"confirmPassword\").addEventListener(\"keyup\",\r\n");
      out.write("			confirmPassword);\r\n");
      out.write("</script>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
