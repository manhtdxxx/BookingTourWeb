/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.96
 * Generated at: 2024-11-16 04:12:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Đăng nhập</title>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("\r\n");
      out.write("<!-- Bootstrap CSS -->\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("	background: linear-gradient(135deg, #e0f7fa, #80deea);\r\n");
      out.write("	font-family: 'Roboto', sans-serif;\r\n");
      out.write("	height: 100vh;\r\n");
      out.write("	margin: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login-container {\r\n");
      out.write("	max-width: 450px;\r\n");
      out.write("	margin: 100px auto;\r\n");
      out.write("	background: #ffffff;\r\n");
      out.write("	border-radius: 15px;\r\n");
      out.write("	padding: 30px;\r\n");
      out.write("	box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\r\n");
      out.write("	transition: transform 0.3s ease-in-out;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login-container:hover {\r\n");
      out.write("	transform: scale(1.02);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login-container h1 {\r\n");
      out.write("	font-size: 2rem;\r\n");
      out.write("	font-weight: 600;\r\n");
      out.write("	color: #1e3a8a;\r\n");
      out.write("	margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn-primary {\r\n");
      out.write("	background-color: #007bff;\r\n");
      out.write("	border: none;\r\n");
      out.write("	transition: background-color 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn-primary:hover {\r\n");
      out.write("	background-color: #0056b3;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".alert {\r\n");
      out.write("	margin-bottom: 20px;\r\n");
      out.write("	border-radius: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".alert-danger {\r\n");
      out.write("	background-color: #f8d7da;\r\n");
      out.write("	color: #721c24;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".alert-success {\r\n");
      out.write("	background-color: #d4edda;\r\n");
      out.write("	color: #155724;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-check-input {\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-check-label {\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	font-size: 0.9rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a {\r\n");
      out.write("	color: #007bff;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	font-size: 0.9rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("p.mt-3 {\r\n");
      out.write("	font-size: 1rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn-close {\r\n");
      out.write("	filter: invert(1);\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<!-- NAVBAR -->\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "layout/nav.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<!-- LOGIN FORM -->\r\n");
      out.write("	<section>\r\n");
      out.write("		<div class=\"container login-container\">\r\n");
      out.write("			<h1 class=\"text-center mb-4\">Đăng nhập</h1>\r\n");
      out.write("\r\n");
      out.write("			<!-- Error message -->\r\n");
      out.write("			");

			String error = (String) request.getAttribute("error");
			error = (error != null) ? error : "";

			if (!error.isEmpty()) {
			
      out.write("\r\n");
      out.write("			<div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n");
      out.write("				<strong>");
      out.print(error);
      out.write("</strong>\r\n");
      out.write("				<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n");
      out.write("			</div>\r\n");
      out.write("			");

			}
			
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<!-- Success message -->\r\n");
      out.write("			");

			String success = (String) session.getAttribute("success");
			success = (success != null) ? success : "";

			if (!success.isEmpty()) {
			
      out.write("\r\n");
      out.write("			<div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n");
      out.write("				<strong>");
      out.print(success);
      out.write("</strong>\r\n");
      out.write("				<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n");
      out.write("			</div>\r\n");
      out.write("			");

			session.removeAttribute("success");
			}
			
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<!-- Cookies -->\r\n");
      out.write("			");

			String savedUsername = "";
			String savedPassword = "";

			Cookie[] cookies = request.getCookies();
			if (cookies != null) {
				for (Cookie cookie : cookies) {
					if ("username".equals(cookie.getName())) {
				savedUsername = cookie.getValue();
					}
					if ("password".equals(cookie.getName())) {
				savedPassword = cookie.getValue();
					}
				}
			}
			
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<form action=\"do-login\" method=\"post\">\r\n");
      out.write("				<div class=\"mb-3\">\r\n");
      out.write("					<label for=\"username\" class=\"form-label\">Username:</label> <input type=\"text\"\r\n");
      out.write("						class=\"form-control\" id=\"username\" placeholder=\"Enter username\" name=\"username\"\r\n");
      out.write("						value=\"");
      out.print(savedUsername);
      out.write("\" required>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"mb-3\">\r\n");
      out.write("					<label for=\"password\" class=\"form-label\">Password:</label> <input type=\"password\"\r\n");
      out.write("						class=\"form-control\" id=\"password\" placeholder=\"Enter password\" name=\"password\"\r\n");
      out.write("						value=\"");
      out.print(savedPassword);
      out.write("\" required>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"d-flex align-items-center justify-content-between mb-3\">\r\n");
      out.write("					<div class=\"form-check\">\r\n");
      out.write("						<input class=\"form-check-input\" type=\"checkbox\" name=\"remember\" id=\"remember\"\r\n");
      out.write("							");
      out.print((!savedUsername.isEmpty() ? "checked" : ""));
      out.write("> <label class=\"form-check-label\"\r\n");
      out.write("							for=\"remember\">Ghi nhớ đăng nhập</label>\r\n");
      out.write("					</div>\r\n");
      out.write("					<a href=\"#\">Quên mật khẩu?</a>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<button type=\"submit\" class=\"btn btn-primary w-100\">Đăng nhập</button>\r\n");
      out.write("\r\n");
      out.write("				<p class=\"mt-3 text-center\">\r\n");
      out.write("					Chưa có tài khoản? <a href=\"register.jsp\">Đăng ký</a>\r\n");
      out.write("				</p>\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("	</section>\r\n");
      out.write("\r\n");
      out.write("	<!-- FOOTER -->\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "layout/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
